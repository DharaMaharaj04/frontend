{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\n\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\dashboards\\\\appointments\\\\AppointmentsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EditAppointment from './EditAppointment';\nimport AddAppointment from './AddAppointment';\nimport AppointmentsTable from '../../../layout/components/appointmentsTable/AppointmentsTable';\nimport PageAction from '../../../layout/components/page-action/PageAction';\nimport { useFetchPageData, usePageData } from '../../../hooks/usePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pageData = {\n  title: 'Appointments',\n  fulFilled: false,\n  breadcrumbs: [{\n    title: 'Medicine',\n    route: 'default-dashboard'\n  }, {\n    title: 'Appointments'\n  }]\n};\n\nconst AppointmentsPage = () => {\n  _s();\n\n  usePageData(pageData);\n  const [appointments, setAppointments] = useFetchPageData('./data/appointments.json', []);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n  const [addingModalVisibility, setAddingModalVisibility] = useState(false);\n\n  const handleDelete = appointment => {\n    const newAppointments = appointments.filter(el => el !== appointment);\n    setAppointments(newAppointments);\n  };\n\n  const handleEdit = appointment => {\n    const editedAppointments = appointments.map(el => el !== selectedAppointment ? el : appointment);\n    setAppointments(editedAppointments);\n    setSelectedAppointment(null);\n  };\n\n  const openAddingModal = () => setAddingModalVisibility(true);\n\n  const addAppointment = appointment => {\n    setAppointments([appointment, ...appointments]);\n    setAddingModalVisibility(false);\n  };\n\n  const closeAddingModal = () => setAddingModalVisibility(false);\n\n  const openEditModal = appointment => setSelectedAppointment(appointment);\n\n  const closeModal = () => {\n    setSelectedAppointment(null);\n  };\n\n  const appointmentsActions = appointment => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buttons-list nowrap\",\n    children: [/*#__PURE__*/_jsxDEV(_Button, {\n      onClick: openEditModal.bind({}, appointment),\n      shape: \"circle\",\n      type: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icofont icofont-edit-alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Button, {\n      onClick: handleDelete.bind({}, appointment),\n      shape: \"circle\",\n      danger: true,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icofont icofont-ui-delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppointmentsTable, {\n      data: appointments,\n      actions: appointmentsActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageAction, {\n      onClick: openAddingModal,\n      icon: \"icofont-stethoscope-alt\",\n      type: 'primary'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddAppointment, {\n      onClose: closeAddingModal,\n      visible: addingModalVisibility,\n      onSubmit: addAppointment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAppointment, {\n      appointment: selectedAppointment,\n      visible: !!selectedAppointment,\n      onClose: closeModal,\n      onEdited: handleEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppointmentsPage, \"DKuknzmUrvmPUyGLNcuCaSfKmOw=\", false, function () {\n  return [usePageData, useFetchPageData];\n});\n\n_c = AppointmentsPage;\nexport default AppointmentsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppointmentsPage\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/dashboards/appointments/AppointmentsPage.tsx"],"names":["React","useState","EditAppointment","AddAppointment","AppointmentsTable","PageAction","useFetchPageData","usePageData","pageData","title","fulFilled","breadcrumbs","route","AppointmentsPage","appointments","setAppointments","selectedAppointment","setSelectedAppointment","addingModalVisibility","setAddingModalVisibility","handleDelete","appointment","newAppointments","filter","el","handleEdit","editedAppointments","map","openAddingModal","addAppointment","closeAddingModal","openEditModal","closeModal","appointmentsActions","bind"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { Button } from 'antd';\r\n\r\nimport EditAppointment from './EditAppointment';\r\nimport AddAppointment from './AddAppointment';\r\nimport AppointmentsTable from '../../../layout/components/appointmentsTable/AppointmentsTable';\r\n\r\nimport PageAction from '../../../layout/components/page-action/PageAction';\r\nimport { useFetchPageData, usePageData } from '../../../hooks/usePage';\r\n\r\nimport { IAppointment } from '../../../interfaces/patient';\r\nimport { IPageData } from '../../../interfaces/page';\r\n\r\nconst pageData: IPageData = {\r\n  title: 'Appointments',\r\n  fulFilled: false,\r\n  breadcrumbs: [\r\n    {\r\n      title: 'Medicine',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'Appointments'\r\n    }\r\n  ]\r\n};\r\n\r\nconst AppointmentsPage = () => {\r\n  usePageData(pageData);\r\n  const [appointments, setAppointments] = useFetchPageData<IAppointment[]>(\r\n    './data/appointments.json',\r\n    []\r\n  );\r\n\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n  const [addingModalVisibility, setAddingModalVisibility] = useState(false);\r\n\r\n  const handleDelete = (appointment: IAppointment) => {\r\n    const newAppointments = appointments.filter((el) => el !== appointment);\r\n    setAppointments(newAppointments);\r\n  };\r\n\r\n  const handleEdit = (appointment: IAppointment) => {\r\n    const editedAppointments = appointments.map((el) =>\r\n      el !== selectedAppointment ? el : appointment\r\n    );\r\n    setAppointments(editedAppointments);\r\n    setSelectedAppointment(null);\r\n  };\r\n\r\n  const openAddingModal = () => setAddingModalVisibility(true);\r\n\r\n  const addAppointment = (appointment: IAppointment) => {\r\n    setAppointments([appointment, ...appointments]);\r\n    setAddingModalVisibility(false);\r\n  };\r\n\r\n  const closeAddingModal = () => setAddingModalVisibility(false);\r\n\r\n  const openEditModal = (appointment: IAppointment) => setSelectedAppointment(appointment);\r\n\r\n  const closeModal = () => {\r\n    setSelectedAppointment(null);\r\n  };\r\n\r\n  const appointmentsActions = (appointment: IAppointment) => (\r\n    <div className='buttons-list nowrap'>\r\n      <Button onClick={openEditModal.bind({}, appointment)} shape='circle' type='primary'>\r\n        <span className='icofont icofont-edit-alt' />\r\n      </Button>\r\n      <Button onClick={handleDelete.bind({}, appointment)} shape='circle' danger>\r\n        <span className='icofont icofont-ui-delete' />\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppointmentsTable data={appointments} actions={appointmentsActions} />\r\n\r\n      <PageAction onClick={openAddingModal} icon='icofont-stethoscope-alt' type={'primary'} />\r\n\r\n      <AddAppointment\r\n        onClose={closeAddingModal}\r\n        visible={addingModalVisibility}\r\n        onSubmit={addAppointment}\r\n      />\r\n\r\n      <EditAppointment\r\n        appointment={selectedAppointment}\r\n        visible={!!selectedAppointment}\r\n        onClose={closeModal}\r\n        onEdited={handleEdit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppointmentsPage;\r\n"]},"metadata":{},"sourceType":"module"}