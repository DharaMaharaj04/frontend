{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\n\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\layout\\\\base\\\\BaseLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Footer from '../components/footer/Footer';\nimport SettingsForm from '../components/settings/SettingsForm';\nimport { updateSettings, resetSettings } from '../../redux/settings/actions';\nimport { fetchPatients } from '../../redux/patients/actions';\nimport className from '../../utils/class-names';\nimport './BaseLayout.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst patientsUrl = 'http://localhost:9000/patients';\n\nconst BaseLayout = _ref => {\n  _s();\n\n  let {\n    nav,\n    topNav,\n    sideNav,\n    orientation,\n    children\n  } = _ref;\n  const [showSettings, setShowSettings] = useState(false);\n  const [scrolled, setScrolled] = useState(false);\n  const dispatch = useDispatch();\n  const sidebarOpened = useSelector(state => state.settings.sidebarOpened);\n  const settings = useSelector(state => state.settings);\n  const pageData = useSelector(state => state.pageData);\n  useEffect(() => {\n    dispatch(fetchPatients());\n  }, [patientsUrl]);\n\n  const handleScroll = event => {\n    setScrolled(event.target.scrollTop > 0);\n  };\n\n  const mainContentClasses = className({\n    'main-content': true,\n    loaded: pageData.loaded,\n    fulfilled: pageData.fulFilled\n  });\n  const mainContentWrapClasses = className({\n    'main-content-wrap': true\n  });\n\n  const onUpdateSettings = settings => dispatch(updateSettings(settings));\n\n  const toggleSettings = () => setShowSettings(!showSettings);\n\n  const onResetSettings = () => dispatch(resetSettings());\n\n  const contentOverlay = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className({\n      'content-overlay': true,\n      show: sidebarOpened\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `layout ${orientation}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app-container ${settings.boxed && 'boxed'} ${scrolled && 'scrolled'}`,\n      children: [nav, topNav, sideNav, /*#__PURE__*/_jsxDEV(\"main\", {\n        onScroll: handleScroll,\n        className: mainContentClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-loader\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icofont-spinner-alt-4 rotate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: mainContentWrapClasses,\n          children: [pageData && !!pageData.title && /*#__PURE__*/_jsxDEV(\"header\", {\n            className: \"page-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"page-title\",\n              children: pageData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        breadcrumbs: pageData.breadcrumbs,\n        layout: settings.layout,\n        boxed: settings.boxed,\n        loaded: pageData.loaded,\n        openModal: toggleSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), contentOverlay, /*#__PURE__*/_jsxDEV(_Modal, {\n        visible: showSettings,\n        onCancel: toggleSettings,\n        footer: null,\n        title: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"m-0\",\n          style: {\n            opacity: 0.8\n          },\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(SettingsForm, {\n          settings: settings,\n          onResetSettings: onResetSettings,\n          onUpdateSetting: onUpdateSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BaseLayout, \"Z6usHC2gWBrwLos+8Ljh28Jb4K0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = BaseLayout;\nexport default BaseLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseLayout\");","map":{"version":3,"sources":["D:/dental-dashboard/src/layout/base/BaseLayout.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Footer","SettingsForm","updateSettings","resetSettings","fetchPatients","className","patientsUrl","BaseLayout","nav","topNav","sideNav","orientation","children","showSettings","setShowSettings","scrolled","setScrolled","dispatch","sidebarOpened","state","settings","pageData","handleScroll","event","target","scrollTop","mainContentClasses","loaded","fulfilled","fulFilled","mainContentWrapClasses","onUpdateSettings","toggleSettings","onResetSettings","contentOverlay","show","boxed","title","breadcrumbs","layout","opacity"],"mappings":"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","sourcesContent":["import React, { ReactNode, useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Modal } from 'antd';\r\n\r\nimport Footer from '../components/footer/Footer';\r\nimport SettingsForm from '../components/settings/SettingsForm';\r\n\r\nimport { updateSettings, resetSettings } from '../../redux/settings/actions';\r\nimport { fetchPatients } from '../../redux/patients/actions';\r\n\r\nimport className from '../../utils/class-names';\r\n\r\nimport { IAppSettings } from '../../interfaces/settings';\r\nimport { IAppState } from '../../interfaces/app-state';\r\nimport { IPageData } from '../../interfaces/page';\r\n\r\nimport './BaseLayout.scss';\r\n\r\nconst patientsUrl = 'http://localhost:9000/patients';\r\n\r\ntype Props = {\r\n  nav: ReactNode;\r\n  sideNav?: ReactNode;\r\n  topNav?: ReactNode;\r\n  children: ReactNode;\r\n  orientation: 'vertical' | 'horizontal';\r\n};\r\n\r\nconst BaseLayout = ({ nav, topNav, sideNav, orientation, children }: Props) => {\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sidebarOpened = useSelector<IAppState, boolean>((state) => state.settings.sidebarOpened);\r\n  const settings = useSelector<IAppState, IAppSettings>((state) => state.settings);\r\n  const pageData = useSelector<IAppState, IPageData>((state) => state.pageData);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPatients());\r\n  }, [patientsUrl]);\r\n\r\n  const handleScroll = (event) => {\r\n    setScrolled(event.target.scrollTop > 0);\r\n  };\r\n\r\n  const mainContentClasses = className({\r\n    'main-content': true,\r\n    loaded: pageData.loaded,\r\n    fulfilled: pageData.fulFilled\r\n  });\r\n\r\n  const mainContentWrapClasses = className({\r\n    'main-content-wrap': true\r\n  });\r\n\r\n  const onUpdateSettings = (settings) => dispatch(updateSettings(settings));\r\n  const toggleSettings = () => setShowSettings(!showSettings);\r\n  const onResetSettings = () => dispatch(resetSettings());\r\n\r\n  const contentOverlay = (\r\n    <div\r\n      className={className({\r\n        'content-overlay': true,\r\n        show: sidebarOpened\r\n      })}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={`layout ${orientation}`}>\r\n      <div className={`app-container ${settings.boxed && 'boxed'} ${scrolled && 'scrolled'}`}>\r\n        {nav}\r\n\r\n        {topNav}\r\n\r\n        {sideNav}\r\n\r\n        <main onScroll={handleScroll} className={mainContentClasses}>\r\n          <div className='app-loader'>\r\n            <i className='icofont-spinner-alt-4 rotate' />\r\n          </div>\r\n\r\n          <div className={mainContentWrapClasses}>\r\n            {pageData && !!pageData.title && (\r\n              <header className='page-header'>\r\n                <h1 className='page-title'>{pageData.title}</h1>\r\n              </header>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </main>\r\n\r\n        <Footer\r\n          breadcrumbs={pageData.breadcrumbs}\r\n          layout={settings.layout}\r\n          boxed={settings.boxed}\r\n          loaded={pageData.loaded}\r\n          openModal={toggleSettings}\r\n        />\r\n        {contentOverlay}\r\n        <Modal\r\n          visible={showSettings}\r\n          onCancel={toggleSettings}\r\n          footer={null}\r\n          title={\r\n            <h3 className='m-0' style={{ opacity: 0.8 }}>\r\n              Settings\r\n            </h3>\r\n          }\r\n        >\r\n          <SettingsForm\r\n            settings={settings}\r\n            onResetSettings={onResetSettings}\r\n            onUpdateSetting={onUpdateSettings}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BaseLayout;\r\n"]},"metadata":{},"sourceType":"module"}