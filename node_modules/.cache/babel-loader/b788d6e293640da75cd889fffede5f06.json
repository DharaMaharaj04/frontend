{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\layout\\\\components\\\\appointmentsTable\\\\AppointmentsTable.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppointmentImg = _ref => {\n  let {\n    img\n  } = _ref;\n  const isData = img.startsWith('data:image');\n  const isWithPath = img.startsWith('http');\n\n  if (isData || isWithPath) {\n    return /*#__PURE__*/_jsxDEV(_Avatar, {\n      size: 40,\n      src: img\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Avatar, {\n    size: 40,\n    src: `${window.location.origin}/${img}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_c = AppointmentImg;\nconst columns = [{\n  key: 'img',\n  title: 'Photo',\n  dataIndex: 'img',\n  render: img => /*#__PURE__*/_jsxDEV(AppointmentImg, {\n    img: img\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 22\n  }, this)\n}, {\n  key: 'name',\n  dataIndex: 'name',\n  title: 'Name',\n  sorter: (a, b) => a.name > b.name ? 1 : -1,\n  render: name => /*#__PURE__*/_jsxDEV(\"strong\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this)\n}, {\n  key: 'email',\n  dataIndex: 'email',\n  title: 'Email',\n  sorter: (a, b) => a.email > b.email ? 1 : -1,\n  render: email => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"nowrap\",\n    style: {\n      color: '#336cfb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icofont icofont-ui-email mr-1\",\n      style: {\n        fontSize: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), email]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}, {\n  key: 'data',\n  dataIndex: 'date',\n  title: 'Date',\n  render: date => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"nowrap\",\n    style: {\n      color: '#a5a5a5'\n    },\n    children: date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this)\n}, {\n  key: 'visit',\n  title: 'Visit time',\n  render: appointment => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"nowrap\",\n    style: {\n      color: '#a5a5a5'\n    },\n    children: appointment.fromTo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this)\n}, {\n  key: 'number',\n  dataIndex: 'number',\n  title: 'Number',\n  render: phone => /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"d-flex align-baseline nowrap\",\n    style: {\n      color: '#336cfb'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icofont icofont-ui-cell-phone mr-1\",\n      style: {\n        fontSize: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), phone]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this)\n}, {\n  key: 'doctor',\n  title: 'Doctor',\n  dataIndex: 'doctor'\n}, {\n  key: 'condition',\n  title: 'Injury/Condition',\n  dataIndex: 'injury'\n}, {}];\n\nconst AppointmentsTable = _ref2 => {\n  let {\n    data,\n    actions\n  } = _ref2;\n  const actionColumn = {\n    key: 'actions',\n    title: 'Actions',\n    render: actions\n  };\n  const displayedColumns = actions ? [...columns, actionColumn] : columns;\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    rowKey: \"number\",\n    dataSource: data,\n    columns: displayedColumns,\n    pagination: {\n      hideOnSinglePage: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = AppointmentsTable;\nexport default AppointmentsTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppointmentImg\");\n$RefreshReg$(_c2, \"AppointmentsTable\");","map":{"version":3,"sources":["D:/dental-dashboard/src/layout/components/appointmentsTable/AppointmentsTable.tsx"],"names":["React","AppointmentImg","img","isData","startsWith","isWithPath","window","location","origin","columns","key","title","dataIndex","render","sorter","a","b","name","email","color","fontSize","date","appointment","fromTo","phone","AppointmentsTable","data","actions","actionColumn","displayedColumns","hideOnSinglePage"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\nimport { Avatar, Table } from 'antd';\r\n\r\nimport { ColumnProps } from 'antd/es/table';\r\nimport { IAppointment } from '../../../interfaces/patient';\r\n\r\nconst AppointmentImg = ({ img }) => {\r\n  const isData = img.startsWith('data:image');\r\n  const isWithPath = img.startsWith('http');\r\n\r\n  if (isData || isWithPath) {\r\n    return <Avatar size={40} src={img} />;\r\n  }\r\n\r\n  return <Avatar size={40} src={`${window.location.origin}/${img}`} />;\r\n};\r\n\r\nconst columns: ColumnProps<IAppointment>[] = [\r\n  {\r\n    key: 'img',\r\n    title: 'Photo',\r\n    dataIndex: 'img',\r\n    render: (img) => <AppointmentImg img={img} />\r\n  },\r\n  {\r\n    key: 'name',\r\n    dataIndex: 'name',\r\n    title: 'Name',\r\n    sorter: (a, b) => (a.name > b.name ? 1 : -1),\r\n    render: (name) => <strong>{name}</strong>\r\n  },\r\n  {\r\n    key: 'email',\r\n    dataIndex: 'email',\r\n    title: 'Email',\r\n    sorter: (a, b) => (a.email > b.email ? 1 : -1),\r\n    render: (email) => (\r\n      <span className='nowrap' style={{ color: '#336cfb' }}>\r\n        <span className='icofont icofont-ui-email mr-1' style={{ fontSize: 16 }} />\r\n        {email}\r\n      </span>\r\n    )\r\n  },\r\n  {\r\n    key: 'data',\r\n    dataIndex: 'date',\r\n    title: 'Date',\r\n    render: (date) => (\r\n      <span className='nowrap' style={{ color: '#a5a5a5' }}>\r\n        {date}\r\n      </span>\r\n    )\r\n  },\r\n  {\r\n    key: 'visit',\r\n    title: 'Visit time',\r\n    render: (appointment) => (\r\n      <span className='nowrap' style={{ color: '#a5a5a5' }}>\r\n        {appointment.fromTo}\r\n      </span>\r\n    )\r\n  },\r\n  {\r\n    key: 'number',\r\n    dataIndex: 'number',\r\n    title: 'Number',\r\n    render: (phone) => (\r\n      <span className='d-flex align-baseline nowrap' style={{ color: '#336cfb' }}>\r\n        <span className='icofont icofont-ui-cell-phone mr-1' style={{ fontSize: 16 }} />\r\n        {phone}\r\n      </span>\r\n    )\r\n  },\r\n  { key: 'doctor', title: 'Doctor', dataIndex: 'doctor' },\r\n  { key: 'condition', title: 'Injury/Condition', dataIndex: 'injury' },\r\n  {}\r\n];\r\n\r\ntype Props = {\r\n  data: IAppointment[];\r\n  actions?: (appointment: IAppointment) => ReactNode;\r\n};\r\n\r\nconst AppointmentsTable = ({ data, actions }: Props) => {\r\n  const actionColumn: ColumnProps<IAppointment> = {\r\n    key: 'actions',\r\n    title: 'Actions',\r\n    render: actions\r\n  };\r\n\r\n  const displayedColumns = actions ? [...columns, actionColumn] : columns;\r\n\r\n  return (\r\n    <Table\r\n      rowKey='number'\r\n      dataSource={data}\r\n      columns={displayedColumns}\r\n      pagination={{ hideOnSinglePage: true }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppointmentsTable;\r\n"]},"metadata":{},"sourceType":"module"}