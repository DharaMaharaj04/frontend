{"ast":null,"code":"import { SET_SETTINGS, RESET_SETTINGS, UPDATE_SETTINGS, TOGGLE_SIDEBAR } from './types';\nimport { DEFAULT_SETTINGS } from './settings';\nconst initialState = DEFAULT_SETTINGS;\nexport const settingsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_SETTINGS:\n      return { ...action.payload\n      };\n\n    case UPDATE_SETTINGS:\n      return { ...state,\n        ...action.payload\n      };\n\n    case RESET_SETTINGS:\n      return { ...initialState\n      };\n\n    case TOGGLE_SIDEBAR:\n      return { ...state,\n        sidebarOpened: !state.sidebarOpened\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["D:/dental-dashboard/src/redux/settings/reducer.ts"],"names":["SET_SETTINGS","RESET_SETTINGS","UPDATE_SETTINGS","TOGGLE_SIDEBAR","DEFAULT_SETTINGS","initialState","settingsReducer","state","action","type","payload","sidebarOpened"],"mappings":"AAAA,SAEEA,YAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,cALF,QAMO,SANP;AASA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,MAAMC,YAA0B,GAAGD,gBAAnC;AAEA,OAAO,MAAME,eAAe,GAAG,YAGZ;AAAA,MAFjBC,KAEiB,uEAFKF,YAEL;AAAA,MADjBG,MACiB;;AACjB,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAL;AACE,aAAO,EAAE,GAAGQ,MAAM,CAACE;AAAZ,OAAP;;AACF,SAAKR,eAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAY,WAAGC,MAAM,CAACE;AAAtB,OAAP;;AACF,SAAKT,cAAL;AACE,aAAO,EAAE,GAAGI;AAAL,OAAP;;AACF,SAAKF,cAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYI,QAAAA,aAAa,EAAE,CAACJ,KAAK,CAACI;AAAlC,OAAP;;AACF;AACE,aAAO,EAAE,GAAGJ;AAAL,OAAP;AAVJ;AAYD,CAhBM","sourcesContent":["import {\r\n  SettingsActionTypes,\r\n  SET_SETTINGS,\r\n  RESET_SETTINGS,\r\n  UPDATE_SETTINGS,\r\n  TOGGLE_SIDEBAR\r\n} from './types';\r\n\r\nimport { IAppSettings } from '../../interfaces/settings';\r\nimport { DEFAULT_SETTINGS } from './settings';\r\n\r\nconst initialState: IAppSettings = DEFAULT_SETTINGS;\r\n\r\nexport const settingsReducer = (\r\n  state: IAppSettings = initialState,\r\n  action: SettingsActionTypes\r\n): IAppSettings => {\r\n  switch (action.type) {\r\n    case SET_SETTINGS:\r\n      return { ...action.payload };\r\n    case UPDATE_SETTINGS:\r\n      return { ...state, ...action.payload };\r\n    case RESET_SETTINGS:\r\n      return { ...initialState };\r\n    case TOGGLE_SIDEBAR:\r\n      return { ...state, sidebarOpened: !state.sidebarOpened };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}