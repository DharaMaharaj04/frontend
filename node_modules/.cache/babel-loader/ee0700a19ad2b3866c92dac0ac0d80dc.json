{"ast":null,"code":"var _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\charts\\\\recharts\\\\charts\\\\CustomShapeBarChart.tsx\";\nimport React from 'react';\nimport { ResponsiveContainer, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid } from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = scaleOrdinal(schemeCategory10).range();\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  female: 2400,\n  male: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  female: 1398,\n  male: 2210\n}, {\n  name: 'Page C',\n  uv: 2000,\n  female: 9800,\n  male: 2290\n}, {\n  name: 'Page D',\n  uv: 2780,\n  female: 3908,\n  male: 2000\n}, {\n  name: 'Page E',\n  uv: 1890,\n  female: 4800,\n  male: 2181\n}, {\n  name: 'Page F',\n  uv: 2390,\n  female: 3800,\n  male: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  female: 4300,\n  male: 2100\n}];\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + 2 * width / 3},${y + height} ${x + width}, ${y + height}\n          Z`;\n\nconst TriangleBar = props => {\n  const {\n    fill,\n    x,\n    y,\n    width,\n    height\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"path\", {\n    d: getPath(x, y, width, height),\n    stroke: \"none\",\n    fill: fill\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n\n_c = TriangleBar;\n\nconst WithCustomShape = () => {\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    height: 300,\n    width: '100%',\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      height: 300,\n      data: data,\n      margin: {\n        top: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"female\",\n        fill: \"#8884d8\",\n        shape: /*#__PURE__*/_jsxDEV(TriangleBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 53\n        }, this),\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: colors[index % 20]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = WithCustomShape;\nexport default WithCustomShape;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TriangleBar\");\n$RefreshReg$(_c2, \"WithCustomShape\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/charts/recharts/charts/CustomShapeBarChart.tsx"],"names":["React","ResponsiveContainer","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","scaleOrdinal","schemeCategory10","colors","range","data","name","uv","female","male","getPath","x","y","width","height","TriangleBar","props","fill","WithCustomShape","top","map","entry","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { ResponsiveContainer, BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid } from 'recharts';\r\n\r\nimport { scaleOrdinal } from 'd3-scale';\r\nimport { schemeCategory10 } from 'd3-scale-chromatic';\r\n\r\nconst colors = scaleOrdinal(schemeCategory10).range();\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    female: 2400,\r\n    male: 2400\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    female: 1398,\r\n    male: 2210\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: 2000,\r\n    female: 9800,\r\n    male: 2290\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 2780,\r\n    female: 3908,\r\n    male: 2000\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: 1890,\r\n    female: 4800,\r\n    male: 2181\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: 2390,\r\n    female: 3800,\r\n    male: 2500\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    female: 4300,\r\n    male: 2100\r\n  }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y + height} ${x + width}, ${\r\n  y + height\r\n}\r\n          Z`;\r\n\r\nconst TriangleBar = (props) => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke='none' fill={fill} />;\r\n};\r\n\r\nconst WithCustomShape = () => {\r\n  return (\r\n    <ResponsiveContainer height={300} width={'100%'}>\r\n      <BarChart\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 20\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray='3 3' />\r\n        <XAxis dataKey='name' />\r\n        <YAxis />\r\n        <Bar dataKey='female' fill='#8884d8' shape={<TriangleBar />}>\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={colors[index % 20] as any} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default WithCustomShape;\r\n"]},"metadata":{},"sourceType":"module"}