{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nasync function getPatients() {\n  const result = await axios.get('./data/patients.json');\n  return result.data;\n}\n\nexport function useGetPatients() {\n  _s();\n\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    getPatients().then(data => {\n      setPatients(data);\n    });\n  }, []);\n  return patients;\n}\n\n_s(useGetPatients, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n\nexport function useGetPatient(name) {\n  _s2();\n\n  const [patient, setPatient] = useState(null);\n  const patients = useGetPatients();\n  useEffect(() => {\n    if (patients.length === 0) return;\n    const newPatient = patients.find(doc => doc.name === name);\n    if (newPatient === undefined) return;\n    setPatient(newPatient);\n  }, [name, patients]);\n  return {\n    patient\n  };\n}\n\n_s2(useGetPatient, \"ZouJ5Wsg/usWIL8W5L3mKXe72jQ=\", false, function () {\n  return [useGetPatients];\n});","map":{"version":3,"sources":["D:/dental-dashboard/src/hooks/useGetPatient.tsx"],"names":["useEffect","useState","axios","getPatients","result","get","data","useGetPatients","patients","setPatients","then","useGetPatient","name","patient","setPatient","length","newPatient","find","doc","undefined"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,WAAf,GAA6B;AAC3B,QAAMC,MAAM,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,sBAAV,CAArB;AACA,SAAOD,MAAM,CAACE,IAAd;AACD;;AAED,OAAO,SAASC,cAAT,GAAsC;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAa,EAAb,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW,GAAGO,IAAd,CAAoBJ,IAAD,IAAU;AAC3BG,MAAAA,WAAW,CAACH,IAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOE,QAAP;AACD;;GAVeD,c;;AAYhB,OAAO,SAASI,aAAT,CAAuBC,IAAvB,EAAqC;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAW,IAAX,CAAtC;AACA,QAAMO,QAAQ,GAAGD,cAAc,EAA/B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAQ,CAACO,MAAT,KAAoB,CAAxB,EAA2B;AAC3B,UAAMC,UAAU,GAAGR,QAAQ,CAACS,IAAT,CAAeC,GAAD,IAASA,GAAG,CAACN,IAAJ,KAAaA,IAApC,CAAnB;AAEA,QAAII,UAAU,KAAKG,SAAnB,EAA8B;AAE9BL,IAAAA,UAAU,CAACE,UAAD,CAAV;AACD,GAPQ,EAON,CAACJ,IAAD,EAAOJ,QAAP,CAPM,CAAT;AASA,SAAO;AAAEK,IAAAA;AAAF,GAAP;AACD;;IAdeF,a;UAEGJ,c","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport { IPatient } from '../interfaces/patient';\r\nimport axios from 'axios';\r\n\r\nasync function getPatients() {\r\n  const result = await axios.get('./data/patients.json');\r\n  return result.data as IPatient[];\r\n}\r\n\r\nexport function useGetPatients(): IPatient[] {\r\n  const [patients, setPatients] = useState<IPatient[]>([]);\r\n\r\n  useEffect(() => {\r\n    getPatients().then((data) => {\r\n      setPatients(data);\r\n    });\r\n  }, []);\r\n\r\n  return patients;\r\n}\r\n\r\nexport function useGetPatient(name: string) {\r\n  const [patient, setPatient] = useState<IPatient>(null);\r\n  const patients = useGetPatients();\r\n\r\n  useEffect(() => {\r\n    if (patients.length === 0) return;\r\n    const newPatient = patients.find((doc) => doc.name === name);\r\n\r\n    if (newPatient === undefined) return;\r\n\r\n    setPatient(newPatient);\r\n  }, [name, patients]);\r\n\r\n  return { patient };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}