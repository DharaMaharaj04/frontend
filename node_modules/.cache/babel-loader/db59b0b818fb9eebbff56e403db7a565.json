{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\n\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\layout\\\\components\\\\patients\\\\ImageLoader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst anonymousImg = `${window.origin}/content/anonymous-400.jpg`;\n\nconst ImageLoader = _ref => {\n  _s();\n\n  let {\n    src,\n    size = 40,\n    onLoad = () => null\n  } = _ref;\n  const input = useRef(null);\n  const [img, setImg] = useState(anonymousImg);\n  useEffect(() => {\n    if (!src) {\n      onLoad(img);\n    }\n\n    return () => {\n      setImg(null);\n    };\n  }, []);\n\n  const handleClick = () => input.current.click();\n\n  const handleLoad = e => {\n    let file = e.target.files[0];\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      const result = reader.result;\n      onLoad(result);\n      setImg(result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const icon = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"icofont icofont-ui-user ml-2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 16\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: input,\n      onChange: handleLoad,\n      type: \"file\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(_Avatar, {\n        src: src || img,\n        size: size,\n        className: \"mr-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        type: 'primary',\n        className: \"btn-outline\",\n        onClick: handleClick,\n        children: [\"Select image \", icon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImageLoader, \"hojKBD+2Z30dC0doWORVgex5xnI=\");\n\n_c = ImageLoader;\nexport default ImageLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageLoader\");","map":{"version":3,"sources":["D:/dental-dashboard/src/layout/components/patients/ImageLoader.tsx"],"names":["React","useEffect","useRef","useState","anonymousImg","window","origin","ImageLoader","src","size","onLoad","input","img","setImg","handleClick","current","click","handleLoad","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","icon","display"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,QAAhD,QAAgE,OAAhE;;;AAIA,MAAMC,YAAY,GAAI,GAAEC,MAAM,CAACC,MAAO,4BAAtC;;AAQA,MAAMC,WAAW,GAAG,QAAoD;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAI,GAAG,EAAd;AAAkBC,IAAAA,MAAM,GAAG,MAAM;AAAjC,GAAmD;AACtE,QAAMC,KAAK,GAAGT,MAAM,CAAmB,IAAnB,CAApB;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAASC,YAAT,CAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,GAAL,EAAU;AACRE,MAAAA,MAAM,CAACE,GAAD,CAAN;AACD;;AAED,WAAO,MAAM;AACXC,MAAAA,MAAM,CAAC,IAAD,CAAN;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,WAAW,GAAG,MAAMH,KAAK,CAACI,OAAN,CAAcC,KAAd,EAA1B;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAsC;AACvD,QAAIC,IAAU,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAjB;AACA,QAAIC,MAAkB,GAAG,IAAIC,UAAJ,EAAzB;;AAEAD,IAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AACvB,YAAMC,MAAM,GAAGH,MAAM,CAACG,MAAtB;AAEAf,MAAAA,MAAM,CAACe,MAAD,CAAN;AACAZ,MAAAA,MAAM,CAACY,MAAD,CAAN;AACD,KALD;;AAOAH,IAAAA,MAAM,CAACI,aAAP,CAAqBP,IAArB;AACD,GAZD;;AAcA,QAAMQ,IAAI,gBAAG;AAAM,IAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAb;;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEhB,KAAZ;AAAmB,MAAA,QAAQ,EAAEM,UAA7B;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,KAAK,EAAE;AAAEW,QAAAA,OAAO,EAAE;AAAX;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAQ,QAAA,GAAG,EAAEpB,GAAG,IAAII,GAApB;AAAyB,QAAA,IAAI,EAAEH,IAA/B;AAAqC,QAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAQ,QAAA,IAAI,EAAE,SAAd;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAiD,QAAA,OAAO,EAAEK,WAA1D;AAAA,oCACgBa,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAYD,CA5CD;;GAAMpB,W;;KAAAA,W;AA8CN,eAAeA,WAAf","sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\r\n\r\nimport { Avatar, Button } from 'antd';\r\n\r\nconst anonymousImg = `${window.origin}/content/anonymous-400.jpg`;\r\n\r\ntype Props = {\r\n  src?: string;\r\n  size?: number;\r\n  onLoad?: (img) => void;\r\n};\r\n\r\nconst ImageLoader = ({ src, size = 40, onLoad = () => null }: Props) => {\r\n  const input = useRef<HTMLInputElement>(null);\r\n  const [img, setImg] = useState<string>(anonymousImg);\r\n\r\n  useEffect(() => {\r\n    if (!src) {\r\n      onLoad(img);\r\n    }\r\n\r\n    return () => {\r\n      setImg(null);\r\n    };\r\n  }, []);\r\n\r\n  const handleClick = () => input.current.click();\r\n\r\n  const handleLoad = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let file: File = e.target.files[0];\r\n    let reader: FileReader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      const result = reader.result as string;\r\n\r\n      onLoad(result);\r\n      setImg(result);\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const icon = <span className='icofont icofont-ui-user ml-2' />;\r\n\r\n  return (\r\n    <>\r\n      <input ref={input} onChange={handleLoad} type='file' style={{ display: 'none' }} />\r\n      <div className='d-flex align-items-center'>\r\n        <Avatar src={src || img} size={size} className='mr-4' />\r\n\r\n        <Button type={'primary'} className='btn-outline' onClick={handleClick}>\r\n          Select image {icon}\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageLoader;\r\n"]},"metadata":{},"sourceType":"module"}