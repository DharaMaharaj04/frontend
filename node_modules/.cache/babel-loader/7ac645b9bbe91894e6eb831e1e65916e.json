{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\medic\\\\components\\\\BillingTable.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  key: 'billNo',\n  title: 'Bill #',\n  sorter: (a, b) => a.billNo - b.billNo,\n  className: 'text-align-rigth',\n  render: _ref => {\n    let {\n      billNo\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-right text-color-200\",\n      children: billNo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }, this);\n  }\n}, {\n  key: 'patient',\n  title: 'Patient',\n  sorter: (a, b) => a.patient.localeCompare(b.patient),\n  render: _ref2 => {\n    let {\n      patient\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-align-left\",\n      children: patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 30\n    }, this);\n  }\n}, {\n  key: 'doctor',\n  title: 'Doctor',\n  sorter: (a, b) => a.doctor.localeCompare(b.doctor),\n  render: _ref3 => {\n    let {\n      doctor\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-left\",\n      children: doctor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }, this);\n  }\n}, {\n  key: 'billDate',\n  title: 'Date',\n  className: 'nowrap',\n  sorter: (a, b) => a.billDate.localeCompare(b.billDate),\n  render: _ref4 => {\n    let {\n      billDate\n    } = _ref4;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-align-left text-color-200\",\n      children: billDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }, this);\n  }\n}, {\n  key: 'charges',\n  title: 'Charges',\n  render: _ref5 => {\n    let {\n      charges\n    } = _ref5;\n    return charges;\n  }\n}, {\n  key: 'tax',\n  title: 'Tax',\n  render: _ref6 => {\n    let {\n      tax\n    } = _ref6;\n    return tax;\n  }\n}, {\n  key: 'discount',\n  title: 'Discount',\n  render: _ref7 => {\n    let {\n      discount\n    } = _ref7;\n    return discount;\n  }\n}, {\n  key: 'total',\n  title: 'Total',\n  render: _ref8 => {\n    let {\n      total\n    } = _ref8;\n    return /*#__PURE__*/_jsxDEV(\"b\", {\n      children: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this);\n  }\n}];\nconst tableClasses = {\n  accent: 'accent-header',\n  none: ''\n};\n\nconst BillingTable = _ref9 => {\n  let {\n    billings,\n    pagination = false,\n    type = 'none'\n  } = _ref9;\n  const tableClass = tableClasses[type];\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    className: tableClass,\n    pagination: pagination,\n    rowKey: \"billNo\",\n    dataSource: billings,\n    columns: columns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BillingTable;\nexport default BillingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BillingTable\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/medic/components/BillingTable.tsx"],"names":["React","columns","key","title","sorter","a","b","billNo","className","render","patient","localeCompare","doctor","billDate","charges","tax","discount","total","tableClasses","accent","none","BillingTable","billings","pagination","type","tableClass"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Table } from 'antd';\r\nimport { ColumnProps, TableProps } from 'antd/es/table';\r\n\r\nimport { IBilling } from '../../../interfaces/patient';\r\n\r\nconst columns: ColumnProps<IBilling>[] = [\r\n  {\r\n    key: 'billNo',\r\n    title: 'Bill #',\r\n    sorter: (a, b) => a.billNo - b.billNo,\r\n    className: 'text-align-rigth',\r\n    render: ({ billNo }) => <span className='text-right text-color-200'>{billNo}</span>\r\n  },\r\n  {\r\n    key: 'patient',\r\n    title: 'Patient',\r\n    sorter: (a, b) => a.patient.localeCompare(b.patient),\r\n    render: ({ patient }) => <span className='text-align-left'>{patient}</span>\r\n  },\r\n  {\r\n    key: 'doctor',\r\n    title: 'Doctor',\r\n    sorter: (a, b) => a.doctor.localeCompare(b.doctor),\r\n    render: ({ doctor }) => <span className='text-left'>{doctor}</span>\r\n  },\r\n  {\r\n    key: 'billDate',\r\n    title: 'Date',\r\n    className: 'nowrap',\r\n    sorter: (a, b) => a.billDate.localeCompare(b.billDate),\r\n    render: ({ billDate }) => <span className='text-align-left text-color-200'>{billDate}</span>\r\n  },\r\n  {\r\n    key: 'charges',\r\n    title: 'Charges',\r\n    render: ({ charges }) => charges\r\n  },\r\n  {\r\n    key: 'tax',\r\n    title: 'Tax',\r\n    render: ({ tax }) => tax\r\n  },\r\n  {\r\n    key: 'discount',\r\n    title: 'Discount',\r\n    render: ({ discount }) => discount\r\n  },\r\n  {\r\n    key: 'total',\r\n    title: 'Total',\r\n    render: ({ total }) => <b>{total}</b>\r\n  }\r\n];\r\n\r\ntype Props = {\r\n  billings: IBilling[];\r\n  pagination?: TableProps<any>['pagination'];\r\n  type?: 'accent' | 'none';\r\n};\r\n\r\nconst tableClasses = {\r\n  accent: 'accent-header',\r\n  none: ''\r\n};\r\n\r\nconst BillingTable = ({ billings, pagination = false, type = 'none' }: Props) => {\r\n  const tableClass = tableClasses[type];\r\n\r\n  return (\r\n    <Table\r\n      className={tableClass}\r\n      pagination={pagination}\r\n      rowKey='billNo'\r\n      dataSource={billings}\r\n      columns={columns}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BillingTable;\r\n"]},"metadata":{},"sourceType":"module"}