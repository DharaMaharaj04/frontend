{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nasync function getDoctors() {\n  const result = await axios.get('./data/doctors.json'); // console.log(result);\n\n  return result.data;\n}\n\nexport function useGetDoctors() {\n  _s();\n\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    getDoctors().then(data => {\n      setDoctors(data);\n    });\n  }, []);\n  return doctors;\n}\n\n_s(useGetDoctors, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n\nexport function useGetDoctor(name) {\n  _s2();\n\n  const [doctor, setDoctor] = useState(null);\n  const doctors = useGetDoctors();\n  useEffect(() => {\n    if (doctors.length === 0) return;\n    const newDoctor = doctors.find(doc => doc.name === name);\n    if (newDoctor === undefined) return;\n    setDoctor(newDoctor);\n  }, [name, doctors]);\n  return {\n    doctor\n  };\n}\n\n_s2(useGetDoctor, \"NgY+giQNIYVECjpXK/mCT8LO4Ss=\", false, function () {\n  return [useGetDoctors];\n});","map":{"version":3,"sources":["D:/dental-dashboard/src/hooks/useGetDoctor.tsx"],"names":["useEffect","useState","axios","getDoctors","result","get","data","useGetDoctors","doctors","setDoctors","then","useGetDoctor","name","doctor","setDoctor","length","newDoctor","find","doc","undefined"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,UAAf,GAA4B;AAC1B,QAAMC,MAAM,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,qBAAV,CAArB,CAD0B,CAE1B;;AACA,SAAOD,MAAM,CAACE,IAAd;AACD;;AAED,OAAO,SAASC,aAAT,GAAkC;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,UAAU,GAAGO,IAAb,CAAmBJ,IAAD,IAAU;AAC1BG,MAAAA,UAAU,CAACH,IAAD,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOE,OAAP;AACD;;GAVeD,a;;AAYhB,OAAO,SAASI,YAAT,CAAsBC,IAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMO,OAAO,GAAGD,aAAa,EAA7B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;AAE1B,UAAMC,SAAS,GAAGR,OAAO,CAACS,IAAR,CAAcC,GAAD,IAASA,GAAG,CAACN,IAAJ,KAAaA,IAAnC,CAAlB;AAEA,QAAII,SAAS,KAAKG,SAAlB,EAA6B;AAE7BL,IAAAA,SAAS,CAACE,SAAD,CAAT;AACD,GARQ,EAQN,CAACJ,IAAD,EAAOJ,OAAP,CARM,CAAT;AAUA,SAAO;AAAEK,IAAAA;AAAF,GAAP;AACD;;IAfeF,Y;UAEEJ,a","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport { IUser } from '../interfaces/user';\r\nimport axios from 'axios';\r\n\r\nasync function getDoctors() {\r\n  const result = await axios.get('./data/doctors.json');\r\n  // console.log(result);\r\n  return result.data as IUser[];\r\n}\r\n\r\nexport function useGetDoctors(): IUser[] {\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getDoctors().then((data) => {\r\n      setDoctors(data);\r\n    });\r\n  }, []);\r\n\r\n  return doctors;\r\n}\r\n\r\nexport function useGetDoctor(name: string) {\r\n  const [doctor, setDoctor] = useState(null);\r\n  const doctors = useGetDoctors();\r\n\r\n  useEffect(() => {\r\n    if (doctors.length === 0) return;\r\n\r\n    const newDoctor = doctors.find((doc) => doc.name === name);\r\n\r\n    if (newDoctor === undefined) return;\r\n\r\n    setDoctor(newDoctor);\r\n  }, [name, doctors]);\r\n\r\n  return { doctor };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}