{"ast":null,"code":"var _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\icons\\\\AntdIconsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport * as AntdIcons from '@ant-design/icons';\nimport { IconWrap } from './IconWrap';\nimport { usePageData } from '../../hooks/usePage';\nimport { categories } from './antd-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let ThemeType;\n\n(function (ThemeType) {\n  ThemeType[\"Filled\"] = \"Filled\";\n  ThemeType[\"Outlined\"] = \"Outlined\";\n  ThemeType[\"TwoTone\"] = \"TwoTone\";\n})(ThemeType || (ThemeType = {}));\n\nconst Category = _ref => {\n  let {\n    icons,\n    title\n  } = _ref;\n  const categoryTitle = title.charAt(0).toUpperCase() + title.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"section-title mb-4\",\n      children: categoryTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: icons.map((_ref2, i) => {\n        let {\n          icon,\n          name\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 col-md-3 col-sm-4 col-6\",\n          children: /*#__PURE__*/_jsxDEV(IconWrap, {\n            children: [/*#__PURE__*/React.createElement(allIcons[icon]), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"selector\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Category;\nconst allIcons = AntdIcons;\nconst pageData = {\n  title: 'Ant icons',\n  fulFilled: true,\n  breadcrumbs: [{\n    title: 'Home',\n    route: 'default-dashboard'\n  }, {\n    title: 'UI Kit ',\n    route: 'default-dashboard'\n  }, {\n    title: 'Ant icons'\n  }]\n};\n\nconst AntdIconsPage = () => {\n  _s();\n\n  usePageData(pageData);\n  const theme = ThemeType.Outlined;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(categories).map(key => {\n      const iconList = categories[key];\n      return {\n        category: key,\n        icons: iconList.map(iconName => ({\n          icon: iconName + theme,\n          name: iconName\n        })).filter(_ref3 => {\n          let {\n            icon\n          } = _ref3;\n          return allIcons[icon];\n        })\n      };\n    }).map(_ref4 => {\n      let {\n        category,\n        icons\n      } = _ref4;\n      return /*#__PURE__*/_jsxDEV(Category, {\n        title: category,\n        icons: icons\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(AntdIconsPage, \"aIn3zWwSHWQddWaco18ZWBURFZE=\", false, function () {\n  return [usePageData];\n});\n\n_c2 = AntdIconsPage;\nexport default AntdIconsPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Category\");\n$RefreshReg$(_c2, \"AntdIconsPage\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/icons/AntdIconsPage.tsx"],"names":["React","AntdIcons","IconWrap","usePageData","categories","ThemeType","Category","icons","title","categoryTitle","charAt","toUpperCase","slice","map","i","icon","name","createElement","allIcons","pageData","fulFilled","breadcrumbs","route","AntdIconsPage","theme","Outlined","Object","keys","key","iconList","category","iconName","filter"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport * as AntdIcons from '@ant-design/icons';\r\n\r\nimport { IconWrap } from './IconWrap';\r\nimport { usePageData } from '../../hooks/usePage';\r\n\r\nimport { IPageData } from '../../interfaces/page';\r\n\r\nimport { categories, CategoriesKeys } from './antd-icons';\r\n\r\nexport enum ThemeType {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  TwoTone = 'TwoTone'\r\n}\r\n\r\nconst Category = ({ icons, title }) => {\r\n  const categoryTitle = title.charAt(0).toUpperCase() + title.slice(1);\r\n\r\n  return (\r\n    <div>\r\n      <h4 className='section-title mb-4'>{categoryTitle}</h4>\r\n\r\n      <div className='row'>\r\n        {icons.map(({ icon, name }, i) => {\r\n\r\n          return (\r\n            <div className='col-lg-2 col-md-3 col-sm-4 col-6' key={i}>\r\n              <IconWrap>\r\n                {React.createElement(allIcons[icon])}\r\n                <span className='selector'>{name}</span>\r\n              </IconWrap>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst allIcons: {\r\n  [key: string]: any;\r\n} = AntdIcons;\r\n\r\nconst pageData: IPageData = {\r\n  title: 'Ant icons',\r\n  fulFilled: true,\r\n  breadcrumbs: [\r\n    {\r\n      title: 'Home',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'UI Kit ',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'Ant icons'\r\n    }\r\n  ]\r\n};\r\n\r\nconst AntdIconsPage = () => {\r\n  usePageData(pageData);\r\n  const theme = ThemeType.Outlined;\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(categories)\r\n        .map((key) => {\r\n          const iconList = categories[key];\r\n\r\n          return {\r\n            category: key,\r\n            icons: iconList\r\n              .map((iconName) => ({ icon: iconName + theme, name: iconName }))\r\n              .filter(({ icon }) => allIcons[icon])\r\n          };\r\n        })\r\n        .map(({ category, icons }) => (\r\n          <Category key={category} title={category as CategoriesKeys} icons={icons} />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AntdIconsPage;\r\n"]},"metadata":{},"sourceType":"module"}