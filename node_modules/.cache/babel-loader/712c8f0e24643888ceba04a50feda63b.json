{"ast":null,"code":"var _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\maps\\\\WorldMapPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts';\nimport { usePageData, useFetchPageData } from '../../hooks/usePage';\nimport { worldMapOptions } from './worldMapOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageData = {\n  fulFilled: true,\n  breadcrumbs: [{\n    title: 'Home',\n    route: 'default-dashboard'\n  }, {\n    title: 'UI Kit ',\n    route: 'default-dashboard'\n  }, {\n    title: 'World map'\n  }]\n};\nconst mapUrl = './data/world.json';\n\nconst WorldMapPage = () => {\n  _s();\n\n  const [mapOptions, setMapOptions] = useState(null);\n  useFetchPageData(mapUrl, null, setOptions);\n  usePageData(pageData);\n\n  function setOptions(geoJson) {\n    echarts.registerMap('HK', geoJson);\n    setMapOptions(worldMapOptions);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-height-page p-4\",\n    children: mapOptions ? /*#__PURE__*/_jsxDEV(ReactEcharts, {\n      option: mapOptions,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      className: \"echarts-for-echarts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorldMapPage, \"itsSPL9/zvqSd/Q293scbnLpwzA=\", false, function () {\n  return [useFetchPageData, usePageData];\n});\n\n_c = WorldMapPage;\nexport default WorldMapPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorldMapPage\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/maps/WorldMapPage.tsx"],"names":["React","useState","ReactEcharts","echarts","usePageData","useFetchPageData","worldMapOptions","pageData","fulFilled","breadcrumbs","title","route","mapUrl","WorldMapPage","mapOptions","setMapOptions","setOptions","geoJson","registerMap","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AAEA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,qBAA9C;AAGA,SAASC,eAAT,QAAgC,mBAAhC;;AAEA,MAAMC,QAAmB,GAAG;AAC1BC,EAAAA,SAAS,EAAE,IADe;AAE1BC,EAAAA,WAAW,EAAE,CACX;AACEC,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADW,EAKX;AACED,IAAAA,KAAK,EAAE,SADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALW,EASX;AACED,IAAAA,KAAK,EAAE;AADT,GATW;AAFa,CAA5B;AAiBA,MAAME,MAAM,GAAG,mBAAf;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C;AAEAI,EAAAA,gBAAgB,CAACO,MAAD,EAAS,IAAT,EAAeI,UAAf,CAAhB;AACAZ,EAAAA,WAAW,CAACG,QAAD,CAAX;;AAEA,WAASS,UAAT,CAAoBC,OAApB,EAAkC;AAChCd,IAAAA,OAAO,CAACe,WAAR,CAAoB,IAApB,EAA0BD,OAA1B;AACAF,IAAAA,aAAa,CAACT,eAAD,CAAb;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,cACGQ,UAAU,gBACT,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,UADV;AAEE,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAFT;AAGE,MAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,YADS,GAMP;AAPN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAtBD;;GAAMP,Y;UAGJR,gB,EACAD,W;;;KAJIS,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport * as echarts from 'echarts';\r\n\r\nimport { usePageData, useFetchPageData } from '../../hooks/usePage';\r\nimport { IPageData } from '../../interfaces/page';\r\n\r\nimport { worldMapOptions } from './worldMapOptions';\r\n\r\nconst pageData: IPageData = {\r\n  fulFilled: true,\r\n  breadcrumbs: [\r\n    {\r\n      title: 'Home',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'UI Kit ',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'World map'\r\n    }\r\n  ]\r\n};\r\n\r\nconst mapUrl = './data/world.json';\r\n\r\nconst WorldMapPage = () => {\r\n  const [mapOptions, setMapOptions] = useState(null);\r\n\r\n  useFetchPageData(mapUrl, null, setOptions);\r\n  usePageData(pageData);\r\n\r\n  function setOptions(geoJson: any) {\r\n    echarts.registerMap('HK', geoJson);\r\n    setMapOptions(worldMapOptions);\r\n  }\r\n\r\n  return (\r\n    <div className='full-height-page p-4'>\r\n      {mapOptions ? (\r\n        <ReactEcharts\r\n          option={mapOptions}\r\n          style={{ height: '100%', width: '100%' }}\r\n          className='echarts-for-echarts'\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldMapPage;\r\n"]},"metadata":{},"sourceType":"module"}