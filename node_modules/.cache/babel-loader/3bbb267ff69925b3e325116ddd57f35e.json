{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\services\\\\InvoicesTable.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoiceStatus = _ref => {\n  let {\n    status\n  } = _ref;\n  if (status === 'Paid') return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"color-green nowrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"icofont icofont-check-circled mr-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), \"Paid\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"color-error nowrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"icofont icofont-close-circled mr-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \"Un-Paid\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InvoiceStatus;\nconst columnsConfig = [{\n  key: 'icon',\n  title: '#',\n  dataIndex: 'icon',\n  render: icon => /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      fontSize: '50px'\n    },\n    className: `icofont ${icon} text-large`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this)\n}, {\n  key: 'date',\n  title: 'Date',\n  sorter: (curent, next) => {\n    if (curent.date === next.date) return 0;\n    return curent.date > next.date ? 1 : -1;\n  },\n  render: _ref2 => {\n    let {\n      date\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-muted nowrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icofont-clock-time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted ml-2\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}, {\n  key: 'recipient',\n  title: 'Recipient',\n  render: _ref3 => {\n    let {\n      recipient\n    } = _ref3;\n    return /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: recipient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 32\n    }, this);\n  }\n}, {\n  key: 'status',\n  title: 'Status',\n  render: _ref4 => {\n    let {\n      status\n    } = _ref4;\n    return /*#__PURE__*/_jsxDEV(InvoiceStatus, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this);\n  }\n}, {\n  key: 'amount',\n  title: 'Amount',\n  render: _ref5 => {\n    let {\n      amount\n    } = _ref5;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-right\",\n      children: amount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }, this);\n  },\n  sorter: (cur, next) => cur.amount > next.amount ? 1 : -1\n}];\n\nconst InvoicesTable = _ref6 => {\n  let {\n    invoices\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(_Table, {\n    rowKey: \"icon\",\n    columns: columnsConfig,\n    dataSource: invoices\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = InvoicesTable;\nexport default InvoicesTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InvoiceStatus\");\n$RefreshReg$(_c2, \"InvoicesTable\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/services/InvoicesTable.tsx"],"names":["React","InvoiceStatus","status","columnsConfig","key","title","dataIndex","render","icon","fontSize","sorter","curent","next","date","recipient","amount","cur","InvoicesTable","invoices"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ColumnProps } from 'antd/lib/table';\r\nimport { IInvoicePreview } from '../../interfaces/invoice';\r\nimport { Table } from 'antd';\r\n\r\nconst InvoiceStatus = ({ status }: Pick<IInvoicePreview, 'status'>) => {\r\n  if (status === 'Paid')\r\n    return (\r\n      <span className='color-green nowrap'>\r\n        <i className='icofont icofont-check-circled mr-2' />\r\n        Paid\r\n      </span>\r\n    );\r\n\r\n  return (\r\n    <span className='color-error nowrap'>\r\n      <i className='icofont icofont-close-circled mr-2' />\r\n      Un-Paid\r\n    </span>\r\n  );\r\n};\r\n\r\nconst columnsConfig: ColumnProps<IInvoicePreview>[] = [\r\n  {\r\n    key: 'icon',\r\n    title: '#',\r\n    dataIndex: 'icon',\r\n    render: (icon) => <span style={{ fontSize: '50px' }} className={`icofont ${icon} text-large`} />\r\n  },\r\n  {\r\n    key: 'date',\r\n    title: 'Date',\r\n    sorter: (curent, next) => {\r\n      if (curent.date === next.date) return 0;\r\n\r\n      return curent.date > next.date ? 1 : -1;\r\n    },\r\n    render: ({ date }) => (\r\n      <span className='text-muted nowrap'>\r\n        <i className='icofont-clock-time' />\r\n        <span className='text-muted ml-2'>{date}</span>\r\n      </span>\r\n    )\r\n  },\r\n  {\r\n    key: 'recipient',\r\n    title: 'Recipient',\r\n    render: ({ recipient }) => <strong>{recipient}</strong>\r\n  },\r\n  {\r\n    key: 'status',\r\n    title: 'Status',\r\n    render: ({ status }) => <InvoiceStatus status={status} />\r\n  },\r\n  {\r\n    key: 'amount',\r\n    title: 'Amount',\r\n    render: ({ amount }) => <span className='text-right'>{amount}</span>,\r\n    sorter: (cur, next) => (cur.amount > next.amount ? 1 : -1)\r\n  }\r\n];\r\n\r\nconst InvoicesTable = ({ invoices }) => (\r\n  <Table rowKey='icon' columns={columnsConfig} dataSource={invoices} />\r\n);\r\n\r\nexport default InvoicesTable;\r\n"]},"metadata":{},"sourceType":"module"}