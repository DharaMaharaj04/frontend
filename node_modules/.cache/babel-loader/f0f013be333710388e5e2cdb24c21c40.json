{"ast":null,"code":"var _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\charts\\\\recharts\\\\charts\\\\AreaChartFillByValue.tsx\";\nimport React from 'react';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Page A',\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: 'Page C',\n  uv: -1000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: 'Page D',\n  uv: 500,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: 'Page E',\n  uv: -2000,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: 'Page F',\n  uv: -250,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: 'Page G',\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\n\nconst gradientOffset = () => {\n  const dataMax = Math.max(...data.map(i => i.uv));\n  const dataMin = Math.min(...data.map(i => i.uv));\n\n  if (dataMax <= 0) {\n    return 0;\n  }\n\n  if (dataMin >= 0) {\n    return 1;\n  }\n\n  return dataMax / (dataMax - dataMin);\n};\n\nconst off = gradientOffset();\n\nconst AreaChartFillByValue = () => {\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    height: 300,\n    width: '100%',\n    children: /*#__PURE__*/_jsxDEV(AreaChart, {\n      width: 500,\n      height: 400,\n      data: data,\n      margin: {\n        top: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"splitColor\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: off,\n            stopColor: \"green\",\n            stopOpacity: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: off,\n            stopColor: \"red\",\n            stopOpacity: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        type: \"monotone\",\n        dataKey: \"uv\",\n        stroke: \"#000\",\n        fill: \"url(#splitColor)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AreaChartFillByValue;\nexport default AreaChartFillByValue;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaChartFillByValue\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/charts/recharts/charts/AreaChartFillByValue.tsx"],"names":["React","ResponsiveContainer","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","data","name","uv","pv","amt","gradientOffset","dataMax","Math","max","map","i","dataMin","min","off","AreaChartFillByValue","top"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  ResponsiveContainer,\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: 'Page A',\r\n    uv: 4000,\r\n    pv: 2400,\r\n    amt: 2400\r\n  },\r\n  {\r\n    name: 'Page B',\r\n    uv: 3000,\r\n    pv: 1398,\r\n    amt: 2210\r\n  },\r\n  {\r\n    name: 'Page C',\r\n    uv: -1000,\r\n    pv: 9800,\r\n    amt: 2290\r\n  },\r\n  {\r\n    name: 'Page D',\r\n    uv: 500,\r\n    pv: 3908,\r\n    amt: 2000\r\n  },\r\n  {\r\n    name: 'Page E',\r\n    uv: -2000,\r\n    pv: 4800,\r\n    amt: 2181\r\n  },\r\n  {\r\n    name: 'Page F',\r\n    uv: -250,\r\n    pv: 3800,\r\n    amt: 2500\r\n  },\r\n  {\r\n    name: 'Page G',\r\n    uv: 3490,\r\n    pv: 4300,\r\n    amt: 2100\r\n  }\r\n];\r\n\r\nconst gradientOffset = () => {\r\n  const dataMax = Math.max(...data.map(i => i.uv));\r\n  const dataMin = Math.min(...data.map(i => i.uv));\r\n\r\n  if (dataMax <= 0) {\r\n    return 0;\r\n  }\r\n  if (dataMin >= 0) {\r\n    return 1;\r\n  }\r\n\r\n  return dataMax / (dataMax - dataMin);\r\n};\r\n\r\nconst off = gradientOffset();\r\n\r\nconst AreaChartFillByValue = () => {\r\n  return (\r\n    <ResponsiveContainer height={300} width={'100%'}>\r\n      <AreaChart\r\n        width={500}\r\n        height={400}\r\n        data={data}\r\n        margin={{\r\n          top: 10\r\n        }}>\r\n        <CartesianGrid strokeDasharray='3 3' />\r\n        <XAxis dataKey='name' />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <defs>\r\n          <linearGradient id='splitColor' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset={off} stopColor='green' stopOpacity={1} />\r\n            <stop offset={off} stopColor='red' stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n        <Area type='monotone' dataKey='uv' stroke='#000' fill='url(#splitColor)' />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default AreaChartFillByValue;\r\n"]},"metadata":{},"sourceType":"module"}