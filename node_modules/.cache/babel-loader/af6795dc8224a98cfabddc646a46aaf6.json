{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport function useFetch(url) {\n  _s();\n\n  let initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  const [data, setData] = useState(initialState);\n\n  async function getData() {\n    const result = await axios.get(url);\n    return result.data;\n  }\n\n  useEffect(() => {\n    getData().then(data => {\n      if (callback) {\n        callback(data);\n      }\n\n      setData(data);\n    }).catch(console.error);\n  }, [url]);\n  return [data, setData];\n}\n\n_s(useFetch, \"EDyOj9y54MnR81NlJUdHFTEAg0Y=\");","map":{"version":3,"sources":["D:/dental-dashboard/src/hooks/useFetch.tsx"],"names":["useEffect","useState","axios","useFetch","url","initialState","callback","data","setData","getData","result","get","then","catch","console","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,QAAT,CACLC,GADK,EAImB;AAAA;;AAAA,MAFxBC,YAEwB,uEAFN,IAEM;AAAA,MADxBC,QACwB;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAII,YAAJ,CAAhC;;AAEA,iBAAeI,OAAf,GAAyB;AACvB,UAAMC,MAAM,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUP,GAAV,CAArB;AACA,WAAOM,MAAM,CAACH,IAAd;AACD;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,GACJG,IADH,CACSL,IAAD,IAAU;AACd,UAAID,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACC,IAAD,CAAR;AACD;;AAEDC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAPH,EAQGM,KARH,CAQSC,OAAO,CAACC,KARjB;AASD,GAVQ,EAUN,CAACX,GAAD,CAVM,CAAT;AAYA,SAAO,CAACG,IAAD,EAAOC,OAAP,CAAP;AACD;;GAzBeL,Q","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nexport function useFetch<T>(\r\n  url: string,\r\n  initialState: T = null,\r\n  callback?: (T) => any\r\n): [T, (data: T) => void] {\r\n  const [data, setData] = useState<T>(initialState);\r\n\r\n  async function getData() {\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData()\r\n      .then((data) => {\r\n        if (callback) {\r\n          callback(data);\r\n        }\r\n\r\n        setData(data);\r\n      })\r\n      .catch(console.error);\r\n  }, [url]);\r\n\r\n  return [data, setData];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}