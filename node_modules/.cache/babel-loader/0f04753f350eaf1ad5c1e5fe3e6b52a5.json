{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\n\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\tables\\\\Operations.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nconst data = [];\n\nfor (let i = 0; i < 46; i++) {\n  data.push({\n    key: i,\n    name: `Edward King ${i}`,\n    age: 32,\n    address: `London, Park Lane no. ${i}`\n  });\n}\n\nconst Operations = () => {\n  _s();\n\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const start = () => {\n    setLoading(false);\n    setTimeout(() => {\n      setSelectedRows([]);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const onSelectChange = selectedRows => {\n    setSelectedRows(selectedRows);\n  };\n\n  const rowSelection = {\n    selectedRows,\n    onChange: onSelectChange\n  };\n  const hasSelected = selectedRows.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: start,\n        disabled: !hasSelected,\n        loading: loading,\n        children: \"Reload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: 8\n        },\n        children: hasSelected ? `Selected ${selectedRows.length} items` : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Table, {\n      pagination: {\n        pageSize: 5\n      },\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Operations, \"DwwNyKqvcs5hXv2AxPChGz8pwoY=\");\n\n_c = Operations;\nexport default Operations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Operations\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/tables/Operations.tsx"],"names":["React","useState","columns","title","dataIndex","data","i","push","key","name","age","address","Operations","selectedRows","setSelectedRows","loading","setLoading","start","setTimeout","onSelectChange","rowSelection","onChange","hasSelected","length","marginBottom","marginLeft","pageSize"],"mappings":";;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CALc,EASd;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CATc,CAAhB;AAeA,MAAMC,IAAI,GAAG,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,IAAAA,GAAG,EAAEF,CADG;AAERG,IAAAA,IAAI,EAAG,eAAcH,CAAE,EAFf;AAGRI,IAAAA,GAAG,EAAE,EAHG;AAIRC,IAAAA,OAAO,EAAG,yBAAwBL,CAAE;AAJ5B,GAAV;AAMD;;AAED,MAAMM,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAU,KAAV,CAAtC;;AAEA,QAAMgB,KAAK,GAAG,MAAM;AAClBD,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEAE,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAPD;;AASA,QAAMG,cAAc,GAAGN,YAAY,IAAI;AACrCC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAG;AACnBP,IAAAA,YADmB;AAEnBQ,IAAAA,QAAQ,EAAEF;AAFS,GAArB;AAIA,QAAMG,WAAW,GAAGT,YAAY,CAACU,MAAb,GAAsB,CAA1C;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAEP,KAAhC;AAAuC,QAAA,QAAQ,EAAE,CAACK,WAAlD;AAA+D,QAAA,OAAO,EAAEP,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,KAAK,EAAE;AAAEU,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA,kBACGH,WAAW,GAAI,YAAWT,YAAY,CAACU,MAAO,QAAnC,GAA6C;AAD3D;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AACE,MAAA,UAAU,EAAE;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OADd;AAEE,MAAA,YAAY,EAAEN,YAFhB;AAGE,MAAA,OAAO,EAAElB,OAHX;AAIE,MAAA,UAAU,EAAEG;AAJd;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAzCD;;GAAMO,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import { Table, Button } from 'antd';\r\nimport React, { useState } from 'react';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name'\r\n  },\r\n  {\r\n    title: 'Age',\r\n    dataIndex: 'age'\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address'\r\n  }\r\n];\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 46; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`\r\n  });\r\n}\r\n\r\nconst Operations: React.FC = () => {\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n\r\n  const start = () => {\r\n    setLoading(false);\r\n\r\n    setTimeout(() => {\r\n      setSelectedRows([]);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  const onSelectChange = selectedRows => {\r\n    setSelectedRows(selectedRows);\r\n  };\r\n\r\n  const rowSelection = {\r\n    selectedRows,\r\n    onChange: onSelectChange\r\n  };\r\n  const hasSelected = selectedRows.length > 0;\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: 16 }}>\r\n        <Button type='primary' onClick={start} disabled={!hasSelected} loading={loading}>\r\n          Reload\r\n        </Button>\r\n        <span style={{ marginLeft: 8 }}>\r\n          {hasSelected ? `Selected ${selectedRows.length} items` : ''}\r\n        </span>\r\n      </div>\r\n      <Table\r\n        pagination={{ pageSize: 5 }}\r\n        rowSelection={rowSelection}\r\n        columns={columns}\r\n        dataSource={data}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Operations;\r\n"]},"metadata":{},"sourceType":"module"}