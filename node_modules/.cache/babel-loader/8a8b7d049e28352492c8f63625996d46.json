{"ast":null,"code":"var _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\pages\\\\settings\\\\Settings.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SettingsForm from '../../layout/components/settings/SettingsForm';\nimport { resetSettings, updateSettings } from '../../redux/settings/actions';\nimport { usePageData } from '../../hooks/usePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageData = {\n  title: 'Settings',\n  fulFilled: true,\n  breadcrumbs: [{\n    title: 'Home',\n    route: 'default-dashboard'\n  }, {\n    title: 'Settings'\n  }]\n};\n\nconst SettingsPage = () => {\n  _s();\n\n  const settings = useSelector(state => state.settings);\n  const dispatch = useDispatch();\n  usePageData(pageData);\n\n  const onResetSettings = () => {\n    dispatch(resetSettings());\n  };\n\n  const onUpdateSettings = settings => {\n    dispatch(updateSettings(settings));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(SettingsForm, {\n        onResetSettings: onResetSettings,\n        onUpdateSetting: onUpdateSettings,\n        settings: settings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsPage, \"bDUBV/eCIrZACk9joyzBodXO3t8=\", false, function () {\n  return [useSelector, useDispatch, usePageData];\n});\n\n_c = SettingsPage;\nexport default SettingsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"sources":["D:/dental-dashboard/src/pages/settings/Settings.tsx"],"names":["React","useDispatch","useSelector","SettingsForm","resetSettings","updateSettings","usePageData","pageData","title","fulFilled","breadcrumbs","route","SettingsPage","settings","state","dispatch","onResetSettings","onUpdateSettings"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,YAAP,MAAyB,+CAAzB;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,8BAA9C;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAKA,MAAMC,QAAmB,GAAG;AAC1BC,EAAAA,KAAK,EAAE,UADmB;AAE1BC,EAAAA,SAAS,EAAE,IAFe;AAG1BC,EAAAA,WAAW,EAAE,CACX;AACEF,IAAAA,KAAK,EAAE,MADT;AAEEG,IAAAA,KAAK,EAAE;AAFT,GADW,EAKX;AACEH,IAAAA,KAAK,EAAE;AADT,GALW;AAHa,CAA5B;;AAcA,MAAMI,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,QAAQ,GAAGX,WAAW,CAAEY,KAAD,IAAsBA,KAAK,CAACD,QAA7B,CAA5B;AACA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AAEAK,EAAAA,WAAW,CAACC,QAAD,CAAX;;AAEA,QAAMS,eAAe,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;AACD,GAFD;;AAIA,QAAMa,gBAAgB,GAAIJ,QAAD,IAAc;AACrCE,IAAAA,QAAQ,CAACV,cAAc,CAACQ,QAAD,CAAf,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,eAAe,EAAEG,eADnB;AAEE,QAAA,eAAe,EAAEC,gBAFnB;AAGE,QAAA,QAAQ,EAAEJ;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBD;;GAAMD,Y;UACaV,W,EACAD,W,EAEjBK,W;;;KAJIM,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SettingsForm from '../../layout/components/settings/SettingsForm';\r\n\r\nimport { resetSettings, updateSettings } from '../../redux/settings/actions';\r\nimport { usePageData } from '../../hooks/usePage';\r\n\r\nimport { IAppState } from '../../interfaces/app-state';\r\nimport { IPageData } from '../../interfaces/page';\r\n\r\nconst pageData: IPageData = {\r\n  title: 'Settings',\r\n  fulFilled: true,\r\n  breadcrumbs: [\r\n    {\r\n      title: 'Home',\r\n      route: 'default-dashboard'\r\n    },\r\n    {\r\n      title: 'Settings'\r\n    }\r\n  ]\r\n};\r\n\r\nconst SettingsPage = () => {\r\n  const settings = useSelector((state: IAppState) => state.settings);\r\n  const dispatch = useDispatch();\r\n\r\n  usePageData(pageData);\r\n\r\n  const onResetSettings = () => {\r\n    dispatch(resetSettings());\r\n  };\r\n\r\n  const onUpdateSettings = (settings) => {\r\n    dispatch(updateSettings(settings));\r\n  };\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-6'>\r\n        <SettingsForm\r\n          onResetSettings={onResetSettings}\r\n          onUpdateSetting={onUpdateSettings}\r\n          settings={settings}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n"]},"metadata":{},"sourceType":"module"}