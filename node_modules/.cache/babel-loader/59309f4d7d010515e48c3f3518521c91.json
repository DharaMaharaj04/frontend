{"ast":null,"code":"import \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\n\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\layout\\\\components\\\\socials\\\\Socials.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons/lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NetworkLayout = _ref => {\n  let {\n    iconInput,\n    linkInput,\n    actionBtn = null\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-12\",\n          children: iconInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-12\",\n          children: linkInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col col-auto\",\n      children: actionBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n\n_c = NetworkLayout;\n\nconst AddLink = _ref2 => {\n  _s();\n\n  let {\n    onLinkAdd\n  } = _ref2;\n  const buttonStyle = {\n    background: 'white',\n    border: 'none'\n  };\n  const iconInput = useRef(null);\n  const linkInput = useRef(null);\n\n  const getUserLink = () => {\n    const icon = iconInput.current.input.value;\n    const link = linkInput.current.input.value;\n    return {\n      icon,\n      link\n    };\n  };\n\n  const resetInputs = () => {\n    iconInput.current.setValue('');\n    linkInput.current.setValue('');\n  };\n\n  const handleAdd = () => {\n    const userLink = getUserLink();\n    onLinkAdd(userLink);\n    resetInputs();\n  };\n\n  return /*#__PURE__*/_jsxDEV(NetworkLayout, {\n    iconInput: /*#__PURE__*/_jsxDEV(_Input, {\n      ref: iconInput,\n      placeholder: \"Icon class\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this),\n    linkInput: /*#__PURE__*/_jsxDEV(_Input, {\n      ref: linkInput,\n      placeholder: \"Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }, this),\n    actionBtn: /*#__PURE__*/_jsxDEV(_Button, {\n      shape: \"circle\",\n      onClick: handleAdd,\n      style: buttonStyle,\n      icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {\n        className: \"icon-blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLink, \"EkLpZgPs43Ukc9Oc7TpdtTYhhtg=\");\n\n_c2 = AddLink;\n\nconst Socials = _ref3 => {\n  _s2();\n\n  let {\n    links\n  } = _ref3;\n  const [networks, setNetworks] = useState(links);\n\n  const addNetwork = link => setNetworks([...networks, link]);\n\n  const removeNetwork = index => {\n    const predicate = (_, _index) => _index !== index;\n\n    const filteredNetworks = networks.filter(predicate);\n    setNetworks(filteredNetworks);\n  };\n\n  const SocialLink = (_ref4, index) => {\n    let {\n      link,\n      icon\n    } = _ref4;\n    const buttonStyle = {\n      background: 'white',\n      border: 'none'\n    };\n    return /*#__PURE__*/_jsxDEV(NetworkLayout, {\n      linkInput: /*#__PURE__*/_jsxDEV(_Input, {\n        defaultValue: link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this),\n      iconInput: /*#__PURE__*/_jsxDEV(_Input, {\n        readOnly: true,\n        prefix: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `icofont ${icon}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 44\n        }, this),\n        value: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this),\n      actionBtn: /*#__PURE__*/_jsxDEV(_Button, {\n        shape: \"circle\",\n        style: buttonStyle,\n        onClick: () => removeNetwork(index),\n        icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n          className: \"icon-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [networks.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stack\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Social networks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), networks.map(SocialLink)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(_Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Add social network\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddLink, {\n      onLinkAdd: addNetwork\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Socials, \"a0BrwB/6bxo42Q5fsXgY3zkqnl4=\");\n\n_c3 = Socials;\nexport default Socials;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NetworkLayout\");\n$RefreshReg$(_c2, \"AddLink\");\n$RefreshReg$(_c3, \"Socials\");","map":{"version":3,"sources":["D:/dental-dashboard/src/layout/components/socials/Socials.tsx"],"names":["React","useRef","useState","DeleteOutlined","PlusOutlined","NetworkLayout","iconInput","linkInput","actionBtn","AddLink","onLinkAdd","buttonStyle","background","border","getUserLink","icon","current","input","value","link","resetInputs","setValue","handleAdd","userLink","Socials","links","networks","setNetworks","addNetwork","removeNetwork","index","predicate","_","_index","filteredNetworks","filter","SocialLink","length","map"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAGA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,uBAA7C;;;;AAIA,MAAMC,aAAa,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,SAAS,GAAG;AAApC,GAAD;AAAA,sBACpB;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCF;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,oBAAqCC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,CAAtB;;KAAMH,a;;AAcN,MAAMI,OAAO,GAAG,SAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACjC,QAAMC,WAAW,GAAG;AAAEC,IAAAA,UAAU,EAAE,OAAd;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GAApB;AAEA,QAAMP,SAAS,GAAGL,MAAM,CAAQ,IAAR,CAAxB;AACA,QAAMM,SAAS,GAAGN,MAAM,CAAQ,IAAR,CAAxB;;AAEA,QAAMa,WAAW,GAAG,MAAiB;AACnC,UAAMC,IAAI,GAAGT,SAAS,CAACU,OAAV,CAAkBC,KAAlB,CAAwBC,KAArC;AACA,UAAMC,IAAI,GAAGZ,SAAS,CAACS,OAAV,CAAkBC,KAAlB,CAAwBC,KAArC;AAEA,WAAO;AACLH,MAAAA,IADK;AAELI,MAAAA;AAFK,KAAP;AAID,GARD;;AAUA,QAAMC,WAAW,GAAG,MAAM;AACxBd,IAAAA,SAAS,CAACU,OAAV,CAAkBK,QAAlB,CAA2B,EAA3B;AACAd,IAAAA,SAAS,CAACS,OAAV,CAAkBK,QAAlB,CAA2B,EAA3B;AACD,GAHD;;AAKA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAJ,IAAAA,SAAS,CAACa,QAAD,CAAT;AACAH,IAAAA,WAAW;AACZ,GAJD;;AAMA,sBACE,QAAC,aAAD;AACE,IAAA,SAAS,eAAE;AAAO,MAAA,GAAG,EAAEd,SAAZ;AAAuB,MAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADb;AAEE,IAAA,SAAS,eAAE;AAAO,MAAA,GAAG,EAAEC,SAAZ;AAAuB,MAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFb;AAGE,IAAA,SAAS,eACP;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,OAAO,EAAEe,SAFX;AAGE,MAAA,KAAK,EAAEX,WAHT;AAIE,MAAA,IAAI,eAAE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;GAAMF,O;;MAAAA,O;;AA2CN,MAAMe,OAAO,GAAG,SAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAACuB,KAAD,CAAxC;;AAEA,QAAMG,UAAU,GAAIT,IAAD,IAAqBQ,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcP,IAAd,CAAD,CAAnD;;AAEA,QAAMU,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAMC,SAAS,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAeA,MAAM,KAAKH,KAA5C;;AACA,UAAMI,gBAAgB,GAAGR,QAAQ,CAACS,MAAT,CAAgBJ,SAAhB,CAAzB;AAEAJ,IAAAA,WAAW,CAACO,gBAAD,CAAX;AACD,GALD;;AAOA,QAAME,UAAU,GAAG,QAA4BN,KAA5B,KAAsC;AAAA,QAArC;AAAEX,MAAAA,IAAF;AAAQJ,MAAAA;AAAR,KAAqC;AACvD,UAAMJ,WAAW,GAAG;AAAEC,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAApB;AAEA,wBACE,QAAC,aAAD;AAEE,MAAA,SAAS,eAAE;AAAO,QAAA,YAAY,EAAEM;AAArB;AAAA;AAAA;AAAA;AAAA,cAFb;AAGE,MAAA,SAAS,eAAE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,MAAM,eAAE;AAAG,UAAA,SAAS,EAAG,WAAUJ,IAAK;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAAxB;AAA6D,QAAA,KAAK,EAAEA;AAApE;AAAA;AAAA;AAAA;AAAA,cAHb;AAIE,MAAA,SAAS,eACP;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,KAAK,EAAEJ,WAFT;AAGE,QAAA,OAAO,EAAE,MAAMkB,aAAa,CAACC,KAAD,CAH9B;AAIE,QAAA,IAAI,eAAE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AALJ,OACOA,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAlBD;;AAoBA,sBACE;AAAA,eACGJ,QAAQ,CAACW,MAAT,gBACC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGX,QAAQ,CAACY,GAAT,CAAaF,UAAb,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,oBADD,GAQG,IATN,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAER;AAApB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAgBD,CAhDD;;IAAMJ,O;;MAAAA,O;AAkDN,eAAeA,OAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { IUserLink } from '../../../interfaces/user';\r\nimport { Button, Divider, Input } from 'antd';\r\nimport { DeleteOutlined, PlusOutlined } from '@ant-design/icons/lib';\r\n\r\ntype Props = { links?: IUserLink[] };\r\n\r\nconst NetworkLayout = ({ iconInput, linkInput, actionBtn = null }) => (\r\n  <div className='row'>\r\n    <div className='col'>\r\n      <div className='row'>\r\n        <div className='col-md-6 col-sm-12'>{iconInput}</div>\r\n\r\n        <div className='col-md-6 col-sm-12'>{linkInput}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className='col col-auto'>{actionBtn}</div>\r\n  </div>\r\n);\r\n\r\nconst AddLink = ({ onLinkAdd }) => {\r\n  const buttonStyle = { background: 'white', border: 'none' };\r\n\r\n  const iconInput = useRef<Input>(null);\r\n  const linkInput = useRef<Input>(null);\r\n\r\n  const getUserLink = (): IUserLink => {\r\n    const icon = iconInput.current.input.value;\r\n    const link = linkInput.current.input.value;\r\n\r\n    return {\r\n      icon,\r\n      link\r\n    };\r\n  };\r\n\r\n  const resetInputs = () => {\r\n    iconInput.current.setValue('');\r\n    linkInput.current.setValue('');\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const userLink = getUserLink();\r\n    onLinkAdd(userLink);\r\n    resetInputs();\r\n  };\r\n\r\n  return (\r\n    <NetworkLayout\r\n      iconInput={<Input ref={iconInput} placeholder='Icon class' />}\r\n      linkInput={<Input ref={linkInput} placeholder='Link' />}\r\n      actionBtn={\r\n        <Button\r\n          shape='circle'\r\n          onClick={handleAdd}\r\n          style={buttonStyle}\r\n          icon={<PlusOutlined className='icon-blue' />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst Socials = ({ links }: Props) => {\r\n  const [networks, setNetworks] = useState(links);\r\n\r\n  const addNetwork = (link: IUserLink) => setNetworks([...networks, link]);\r\n\r\n  const removeNetwork = (index) => {\r\n    const predicate = (_, _index) => _index !== index;\r\n    const filteredNetworks = networks.filter(predicate);\r\n\r\n    setNetworks(filteredNetworks);\r\n  };\r\n\r\n  const SocialLink = ({ link, icon }: IUserLink, index) => {\r\n    const buttonStyle = { background: 'white', border: 'none' };\r\n\r\n    return (\r\n      <NetworkLayout\r\n        key={index}\r\n        linkInput={<Input defaultValue={link} />}\r\n        iconInput={<Input readOnly prefix={<i className={`icofont ${icon}`} />} value={icon} />}\r\n        actionBtn={\r\n          <Button\r\n            shape='circle'\r\n            style={buttonStyle}\r\n            onClick={() => removeNetwork(index)}\r\n            icon={<DeleteOutlined className='icon-error' />}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {networks.length ? (\r\n        <>\r\n          <div className='stack'>\r\n            <h5>Social networks</h5>\r\n            {networks.map(SocialLink)}\r\n          </div>\r\n          <Divider />\r\n        </>\r\n      ) : null}\r\n\r\n      <h5>Add social network</h5>\r\n      <AddLink onLinkAdd={addNetwork} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Socials;\r\n"]},"metadata":{},"sourceType":"module"}