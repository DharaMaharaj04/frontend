{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\n\nvar _jsxFileName = \"D:\\\\dental-dashboard\\\\src\\\\layout\\\\components\\\\settings\\\\SettingsForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ColorPicker from '../../../ui/color-picker/ColorPicker';\nimport './SettingsForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SettingsForm = _ref => {\n  _s();\n\n  let {\n    settings,\n    onResetSettings,\n    onUpdateSetting\n  } = _ref;\n  const downloadLink = useRef(null);\n  const {\n    boxed,\n    sidebarBg,\n    topbarBg\n  } = settings;\n  const history = useHistory();\n  const layoutUrl = history.location.pathname.split('/')[1];\n\n  const handleReset = () => {\n    onResetSettings();\n  };\n\n  const handleDownload = () => {\n    const settingsJSON = JSON.stringify(settings);\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(settingsJSON);\n    downloadLink.current.setAttribute('href', dataStr);\n    downloadLink.current.setAttribute('download', 'settings.json');\n    downloadLink.current.click();\n  };\n\n  const setValue = (name, value) => {\n    onUpdateSetting({ ...settings,\n      [name]: value\n    });\n  };\n\n  const handleLayoutChange = type => {\n    const currentRoute = history.location.pathname.split('/')[2];\n    history.push(`/${type}/${currentRoute}`);\n    setValue('layout', type);\n  };\n\n  const handleSideBgChange = _ref2 => {\n    let {\n      color,\n      contrast\n    } = _ref2;\n    return onUpdateSetting({ ...settings,\n      sidebarBg: color,\n      sidebarColor: contrast\n    });\n  };\n\n  const handleNavBgChange = _ref3 => {\n    let {\n      color\n    } = _ref3;\n    return setValue('topbarBg', color);\n  };\n\n  const handleBoxedChange = boxed => setValue('boxed', boxed);\n\n  const sidebarPickerLabel = layoutUrl === 'vertical' ? 'Sidebar background' : 'Second navbar background';\n  return /*#__PURE__*/_jsxDEV(_Form, {\n    layout: \"vertical\",\n    className: \"settings-form\",\n    children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n      label: \"Topbar background\",\n      children: /*#__PURE__*/_jsxDEV(ColorPicker, {\n        onColorChange: handleNavBgChange,\n        color: topbarBg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n      label: sidebarPickerLabel,\n      children: /*#__PURE__*/_jsxDEV(ColorPicker, {\n        onColorChange: handleSideBgChange,\n        color: sidebarBg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n      label: \"Layout\",\n      children: /*#__PURE__*/_jsxDEV(_Select, {\n        onChange: handleLayoutChange,\n        defaultValue: layoutUrl,\n        children: [/*#__PURE__*/_jsxDEV(_Select.Option, {\n          value: 'vertical',\n          children: \"Vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Select.Option, {\n          value: 'horizontal',\n          children: \"Horizontal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n      label: \"Boxed\",\n      children: /*#__PURE__*/_jsxDEV(_Switch, {\n        onChange: handleBoxedChange,\n        checked: boxed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between buttons-list settings-actions\",\n      children: [/*#__PURE__*/_jsxDEV(_Button, {\n        danger: true,\n        onClick: handleReset,\n        children: \"Reset to default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Button, {\n        type: \"primary\",\n        onClick: handleDownload,\n        children: \"Download settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      ref: downloadLink,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsForm, \"afqhK22q7VDM5LfwOmzB6F7kBps=\", false, function () {\n  return [useHistory];\n});\n\n_c = SettingsForm;\nexport default SettingsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsForm\");","map":{"version":3,"sources":["D:/dental-dashboard/src/layout/components/settings/SettingsForm.tsx"],"names":["React","useRef","useHistory","ColorPicker","SettingsForm","settings","onResetSettings","onUpdateSetting","downloadLink","boxed","sidebarBg","topbarBg","history","layoutUrl","location","pathname","split","handleReset","handleDownload","settingsJSON","JSON","stringify","dataStr","encodeURIComponent","current","setAttribute","click","setValue","name","value","handleLayoutChange","type","currentRoute","push","handleSideBgChange","color","contrast","sidebarColor","handleNavBgChange","handleBoxedChange","sidebarPickerLabel","display"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Form, Select, Switch, Button } from 'antd';\r\n\r\nimport ColorPicker from '../../../ui/color-picker/ColorPicker';\r\n\r\nimport { IAppSettings } from '../../../interfaces/settings';\r\n\r\nimport './SettingsForm.scss';\r\n\r\ntype Props = {\r\n  settings: IAppSettings;\r\n  onResetSettings: () => void;\r\n  onUpdateSetting: (settings: IAppSettings) => void;\r\n};\r\n\r\nconst SettingsForm = ({ settings, onResetSettings, onUpdateSetting }: Props) => {\r\n  const downloadLink = useRef<HTMLAnchorElement>(null);\r\n  const { boxed, sidebarBg, topbarBg } = settings;\r\n\r\n  const history = useHistory();\r\n  const layoutUrl = history.location.pathname.split('/')[1];\r\n\r\n  const handleReset = () => {\r\n    onResetSettings();\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const settingsJSON = JSON.stringify(settings);\r\n    const dataStr = 'data:text/json;charset=utf-8,' + encodeURIComponent(settingsJSON);\r\n\r\n    downloadLink.current.setAttribute('href', dataStr);\r\n    downloadLink.current.setAttribute('download', 'settings.json');\r\n    downloadLink.current.click();\r\n  };\r\n\r\n  const setValue = (name: string, value: any) => {\r\n    onUpdateSetting({ ...settings, [name]: value });\r\n  };\r\n\r\n  const handleLayoutChange = (type: string) => {\r\n    const currentRoute = history.location.pathname.split('/')[2];\r\n\r\n    history.push(`/${type}/${currentRoute}`);\r\n    setValue('layout', type);\r\n  };\r\n\r\n  const handleSideBgChange = ({ color, contrast }) =>\r\n    onUpdateSetting({ ...settings, sidebarBg: color, sidebarColor: contrast });\r\n\r\n  const handleNavBgChange = ({ color }) => setValue('topbarBg', color);\r\n  const handleBoxedChange = (boxed: boolean) => setValue('boxed', boxed);\r\n\r\n  const sidebarPickerLabel =\r\n    layoutUrl === 'vertical' ? 'Sidebar background' : 'Second navbar background';\r\n\r\n  return (\r\n    <Form layout='vertical' className='settings-form'>\r\n      <Form.Item label='Topbar background'>\r\n        <ColorPicker onColorChange={handleNavBgChange} color={topbarBg} />\r\n      </Form.Item>\r\n\r\n      <Form.Item label={sidebarPickerLabel}>\r\n        <ColorPicker onColorChange={handleSideBgChange} color={sidebarBg} />\r\n      </Form.Item>\r\n\r\n      <Form.Item label='Layout'>\r\n        <Select onChange={handleLayoutChange} defaultValue={layoutUrl}>\r\n          <Select.Option value={'vertical'}>Vertical</Select.Option>\r\n\r\n          <Select.Option value={'horizontal'}>Horizontal</Select.Option>\r\n        </Select>\r\n      </Form.Item>\r\n\r\n      <Form.Item label='Boxed'>\r\n        <Switch onChange={handleBoxedChange} checked={boxed} />\r\n      </Form.Item>\r\n\r\n      <div className='d-flex justify-content-between buttons-list settings-actions'>\r\n        <Button danger onClick={handleReset}>\r\n          Reset to default\r\n        </Button>\r\n\r\n        <Button type='primary' onClick={handleDownload}>\r\n          Download settings\r\n        </Button>\r\n      </div>\r\n      <a href='#' ref={downloadLink} style={{ display: 'none' }} />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n"]},"metadata":{},"sourceType":"module"}